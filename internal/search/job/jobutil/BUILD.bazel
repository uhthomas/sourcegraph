load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "jobutil",
    srcs = [
        "alert.go",
        "combinators.go",
        "expression_job.go",
        "job.go",
        "limit.go",
        "repo_pager_job.go",
        "select.go",
        "sub_repo_perms_job.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/internal/search/job/jobutil",
    visibility = ["//:__subpackages__"],
    deps = [
        "//internal/actor",
        "//internal/authz",
        "//internal/conf",
        "//internal/featureflag",
        "//internal/search",
        "//internal/search/alert",
        "//internal/search/codeownership",
        "//internal/search/commit",
        "//internal/search/filter",
        "//internal/search/job",
        "//internal/search/limits",
        "//internal/search/lucky",
        "//internal/search/query",
        "//internal/search/repos",
        "//internal/search/result",
        "//internal/search/run",
        "//internal/search/searchcontexts",
        "//internal/search/searcher",
        "//internal/search/streaming",
        "//internal/search/structural",
        "//internal/search/zoekt",
        "//internal/trace",
        "//schema",
        "@com_github_grafana_regexp//:regexp",
        "@com_github_inconshreveable_log15//:log15",
        "@com_github_opentracing_opentracing_go//log",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_prometheus_client_golang//prometheus/promauto",
        "@com_github_sourcegraph_log//:log",
        "@com_github_sourcegraph_sourcegraph_lib//errors",
        "@org_golang_x_sync//semaphore",
        "@org_uber_go_atomic//:atomic",
    ],
)

go_test(
    name = "jobutil_test",
    srcs = [
        "alert_test.go",
        "combinators_test.go",
        "expression_job_test.go",
        "job_test.go",
        "repo_pager_job_test.go",
        "select_test.go",
        "sub_repo_perms_job_test.go",
    ],
    embed = [":jobutil"],
    deps = [
        "//internal/actor",
        "//internal/api",
        "//internal/authz",
        "//internal/search",
        "//internal/search/filter",
        "//internal/search/job",
        "//internal/search/job/mockjob",
        "//internal/search/job/printer",
        "//internal/search/query",
        "//internal/search/result",
        "//internal/search/run",
        "//internal/search/searcher",
        "//internal/search/streaming",
        "//internal/search/zoekt",
        "//internal/types",
        "//schema",
        "@com_github_google_go_cmp//cmp",
        "@com_github_google_go_cmp//cmp/cmpopts",
        "@com_github_hexops_autogold//:autogold",
        "@com_github_sourcegraph_log//logtest",
        "@com_github_sourcegraph_sourcegraph_lib//errors",
        "@com_github_stretchr_testify//require",
    ],
)
