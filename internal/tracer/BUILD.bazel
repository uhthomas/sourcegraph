load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "tracer",
    srcs = [
        "doc.go",
        "jaeger.go",
        "otel.go",
        "switchable_ot.go",
        "switchable_otel.go",
        "tracer.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/internal/tracer",
    visibility = ["//:__subpackages__"],
    deps = [
        "//internal/conf/conftypes",
        "//internal/env",
        "//internal/hostname",
        "//internal/trace/policy",
        "//internal/version",
        "@com_github_opentracing_opentracing_go//:opentracing-go",
        "@com_github_sourcegraph_log//:log",
        "@com_github_sourcegraph_sourcegraph_lib//errors",
        "@com_github_uber_jaeger_client_go//:jaeger-client-go",
        "@com_github_uber_jaeger_client_go//config",
        "@com_github_uber_jaeger_lib//metrics",
        "@io_opentelemetry_go_contrib_propagators_jaeger//:jaeger",
        "@io_opentelemetry_go_contrib_propagators_ot//:ot",
        "@io_opentelemetry_go_otel//:otel",
        "@io_opentelemetry_go_otel//propagation",
        "@io_opentelemetry_go_otel//semconv/v1.4.0:v1_4_0",
        "@io_opentelemetry_go_otel_bridge_opentracing//:opentracing",
        "@io_opentelemetry_go_otel_exporters_otlp_otlptrace//:otlptrace",
        "@io_opentelemetry_go_otel_exporters_otlp_otlptrace_otlptracegrpc//:otlptracegrpc",
        "@io_opentelemetry_go_otel_sdk//resource",
        "@io_opentelemetry_go_otel_sdk//trace",
        "@io_opentelemetry_go_otel_trace//:trace",
        "@org_uber_go_automaxprocs//maxprocs",
    ],
)
